{
  "version": 3,
  "sources": [
    "components/Player.js",
    "components/Song.js",
    "components/LibrarySong.js",
    "components/Library.js",
    "components/Nav.js",
    "App.js",
    "reportWebVitals.js",
    "index.js"
  ],
  "names": [
    "Player",
    "audioRef",
    "setSongInfo",
    "songInfo",
    "currentSong",
    "isPlaying",
    "setIsPlaying",
    "setCurrentSong",
    "songs",
    "setSongs",
    "useEffect",
    "newSongs",
    "map",
    "song",
    "id",
    "active",
    "getTime",
    "time",
    "Math",
    "floor",
    "slice",
    "skipTrackHandler",
    "direction",
    "a",
    "currentIndex",
    "findIndex",
    "length",
    "current",
    "play",
    "trackAnim",
    "transform",
    "animationPercentage",
    "className",
    "currentTime",
    "min",
    "max",
    "duration",
    "value",
    "onChange",
    "e",
    "target",
    "type",
    "style",
    "onClick",
    "icon",
    "faStepBackward",
    "size",
    "pause",
    "faPause",
    "faPlay",
    "faStepForward",
    "Song",
    "src",
    "imageUrl",
    "alt",
    "name",
    "artist",
    "LibrarySong",
    "songSelectHandler",
    "selectedSong",
    "filter",
    "state",
    "year",
    "Library",
    "libraryStatus",
    "Nav",
    "setLibraryStatus",
    "faBars",
    "App",
    "useRef",
    "useState",
    "timeUpdateHandler",
    "roundedCurrent",
    "round",
    "roundedDuration",
    "animation",
    "songEndHandler",
    "axios",
    "get",
    "then",
    "res",
    "data",
    "tracks",
    "onLoadedMetadata",
    "onTimeUpdate",
    "ref",
    "audio",
    "onEnded",
    "reportWebVitals",
    "onPerfEntry",
    "Function",
    "getCLS",
    "getFID",
    "getFCP",
    "getLCP",
    "getTTFB",
    "ReactDOM",
    "render",
    "StrictMode",
    "document",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.bcceaffd.chunk.js",
  "sourcesContent": [
    "import React, { useEffect } from \"react\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faPause,\r\n  faStepBackward,\r\n  faStepForward, \r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = ({\r\n  audioRef,\r\n  setSongInfo,\r\n  songInfo,\r\n  currentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  setCurrentSong,\r\n  songs,\r\n  setSongs,\r\n}) => {\r\n  useEffect(() => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === currentSong.id) { \r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return { ...song, active: false };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentSong]); \r\n\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause(); \r\n      setIsPlaying(!isPlaying);\r\n    } else { \r\n      audioRef.current.play(); \r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  }; \r\n\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n\r\n  const skipTrackHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === \"skip-forward\") {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if (direction === \"skip-back\") {\r\n      if ((currentIndex - 1) % songs.length === -1) { \r\n        await setCurrentSong(songs[songs.length - 1]);\r\n        if (isPlaying) audioRef.current.play();\r\n        return;\r\n      }\r\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n    }\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  const trackAnim = {\r\n    transform: `translateX(${songInfo.animationPercentage}%`,\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div className=\"track\">\r\n          <input\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            value={songInfo.currentTime}\r\n            onChange={dragHandler}\r\n            type=\"range\"\r\n          />\r\n          <div style={trackAnim} className=\"animate-track\"></div>\r\n        </div>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-back\")}\r\n          className=\"skip-back\"\r\n          icon={faStepBackward}\r\n          size=\"2x\"\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-forward\")}\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faStepForward}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n",
    "import React from \"react\";\r\n\r\nconst Song = ({ currentSong }) => {\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img src={currentSong.imageUrl} alt={currentSong.name}></img>\r\n      <h2>{currentSong.name}</h2>\r\n      <h3>{currentSong.artist}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n",
    "import React from \"react\";\r\n\r\nconst LibrarySong = ({\r\n  song,\r\n  audioRef,\r\n  isPlaying,\r\n  songs,\r\n  setCurrentSong,\r\n  id,\r\n  setSongs,\r\n}) => {\r\n  const songSelectHandler = async () => {\r\n    const selectedSong = songs.filter((state) => state.id === id);\r\n    await setCurrentSong(selectedSong[0]);\r\n\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return { ...song, active: false };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={songSelectHandler}\r\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\r\n    > \r\n      <img src={song.imageUrl} alt={song.name}></img>\r\n      <div className=\"song-description\">\r\n        <h3>{song.name}</h3> \r\n        <h4>{song.year}</h4> \r\n        <h4>{song.artist}</h4>\r\n      </div>   \r\n    </div> \r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n",
    "import React from \"react\";\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({\r\n  songs,\r\n  audioRef,\r\n  isPlaying,\r\n  setCurrentSong,\r\n  setSongs,\r\n  libraryStatus,\r\n}) => {\r\n  return (\r\n    <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\r\n      <h2 className=\"playlist-title\">Playlist</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            song={song}\r\n            setCurrentSong={setCurrentSong}\r\n            songs={songs}\r\n            id={song.id}\r\n            key={song.id}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying} \r\n            setSongs={setSongs}\r\n          />\r\n        ))}\r\n      </div> \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n",
    "import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({ setLibraryStatus, libraryStatus }) => {\r\n  return (\r\n    <nav>\r\n      <h1> IX. </h1>\r\n      <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n        <FontAwesomeIcon icon={faBars} />\r\n      </button>  \r\n    </nav>  \r\n  );\r\n}; \r\n\r\nexport default Nav;\r\n",
    "import React, { useState, useEffect, useRef } from \"react\";\nimport axios from 'axios'\n\n//adding components\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\"; \n//import styles\nimport \"./styles/app.scss\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n  \n\n\nfunction App() {  \n  const audioRef = useRef(null);\n  const [songs, setSongs] = useState([{\n    \"id\": \"5ff13d6646d3a91ea12fac61\", \n    \"name\": \"Africa\",\n    \"imageUrl\": \"https://is3-ssl.mzstatic.com/image/thumb/Music123/v4/92/fd/d1/92fdd10b-9cbd-5032-0908-7d72a381884d/074643772822.jpg/1000x1000bb.webp\",\n    \"artist\": \"Toto\",\n    \"audio\": \"https://il.ilill.li/mp3/Toto_Africa.mp3?t=dropbox\",\n    \"year\": 1982,\n    \"active\": true\n}]);  \n\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0  \n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100);\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration,\n      animationPercentage: animation\n    });\n  };\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n  };\n  useEffect(() => { \n    axios.get('http://localhost:8080/items/tracks')\n         .then((res) => \n            setSongs(res.data.tracks)\n        )\n  }, [])     \n  \n  \n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player \n        setSongInfo={setSongInfo}\n        songInfo={songInfo}\n        audioRef={audioRef}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        isPlaying={isPlaying}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library\n        audioRef={audioRef} \n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      ;\n      <audio\n        onLoadedMetadata={timeUpdateHandler}\n        onTimeUpdate={timeUpdateHandler} \n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n",
    "const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",
    "import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"
  ],
  "sourceRoot": ""
}
